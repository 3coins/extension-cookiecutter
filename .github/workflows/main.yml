name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

defaults:
  run:
    shell: bash -eux {0}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # This will be used by the base setup action
        python-version: ["3.7", "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Install dependencies
        run: |
          python -m pip install cookiecutter check-manifest build

      - name: Create server extension pip install
        run: |
          # Trick to use custom parameters
          python -c "from cookiecutter.main import cookiecutter; import json; f=open('cookiecutter.json'); d=json.load(f); f.close(); d['author_name']='foo'; d['author_email']='bar@foo.com'; cookiecutter('.', extra_context=d, no_input=True)"
          cd my_server_extension
          cat pyproject.toml
          pip install .
          pip install jupyter_server

      - name: Check pip install method
        run: |
          set -eux
          jupyter server extension list
          jupyter server extension list 2>&1 | grep -ie "my_server_extension.*OK"

          pip uninstall -y my_server_extension
          jupyter server extension list 2>&1 | grep -ie "my_server_extension.*OK" && exit 1
          pip uninstall -y my_server_extension
          rm -rf my_server_extension

      - name: Create server extension pip develop
        run: |
          # Trick to use custom parameters
          python -c "from cookiecutter.main import cookiecutter; import json; f=open('cookiecutter.json'); d=json.load(f); f.close(); d['author_name']='foo'; d['author_email']='bar@foo.com'; cookiecutter('.', extra_context=d, no_input=True)"
          cd my_server_extension
          cat pyproject.toml
          pip install -e .
          pip install jupyter_server

      - name: Check pip develop method
        run: |
          jupyter server extension list
          jupyter server extension list 2>&1 | grep -ie "my_server_extension.*OK"

          pip uninstall -y my_server_extension
          jupyter server extension list 2>&1 | grep -ie "my_server_extension.*OK" && exit 1
          pip uninstall -y my_server_extension
          rm -rf my_server_extension

      - name: Install server extension from sdist
        run: |
          # Trick to use custom parameters
          python -c "from cookiecutter.main import cookiecutter; import json; f=open('cookiecutter.json'); d=json.load(f); f.close(); d['author_name']='foo'; d['author_email']='bar@foo.com'; cookiecutter('.', extra_context=d, no_input=True)"
          cd my_server_extension
          pip install jupyter_server build
          python -m build --sdist .
          pip install dist/*.tar.gz

          # Copy the sdist so we can upload it
          cp dist/*.tar.gz ../my_server_extension.tar.gz

      - name: Check install tarball method
        run: |
          jupyter server extension list
          jupyter server extension list 2>&1 | grep -ie "my_server_extension.*OK"

          pip uninstall -y my_server_extension
          jupyter server extension list 2>&1 | grep -ie "my_server_extension.*OK" && exit 1
          pip uninstall -y my_server_extension
          rm -rf my_server_extension

      - uses: actions/upload-artifact@v2
        if: startsWith(runner.os, 'Linux')
        with:
          name: my_server_extension-sdist
          path: my_server_extension.tar.gz
